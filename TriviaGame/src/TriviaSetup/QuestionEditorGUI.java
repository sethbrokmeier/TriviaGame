/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TriviaSetup;

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;

/**
 *
 * @author SB133380
 */
public class QuestionEditorGUI extends javax.swing.JFrame {

    Question myQuestion;
    QuestionList myList;
    CategoryList myCategories;
    /**
     * Creates new form QuestionEditorGUI
     */
    public QuestionEditorGUI() {
        initComponents();
        myList = new QuestionList();
        myCategories = new CategoryList();
        this.jlbQuestionID.setModel(myList.getQuestionList());
        this.jlbQuestionID.setSelectedIndex(0);
        this.jcbCategory.setModel(myCategories.getCategoryCombo());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblQuestionID = new javax.swing.JLabel();
        lblQuestionText = new javax.swing.JLabel();
        lblAnswer = new javax.swing.JLabel();
        jScrollIDPane = new javax.swing.JScrollPane();
        jlbQuestionID = new javax.swing.JList<>();
        jScrollQuestionPanel = new javax.swing.JScrollPane();
        txtQuestionText = new javax.swing.JTextArea();
        jScrollAnswerPanel = new javax.swing.JScrollPane();
        txtAnswerText = new javax.swing.JTextArea();
        jbtnUpdate = new javax.swing.JButton();
        jbtnCreate = new javax.swing.JButton();
        jbtnDelete = new javax.swing.JButton();
        jcbCategory = new javax.swing.JComboBox<>();
        lblCategory = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblQuestionID.setText("Question ID:");

        lblQuestionText.setText("Question:");

        lblAnswer.setText("Answer:");

        jlbQuestionID.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jlbQuestionID.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jlbQuestionIDValueChanged(evt);
            }
        });
        jScrollIDPane.setViewportView(jlbQuestionID);

        txtQuestionText.setColumns(20);
        txtQuestionText.setRows(5);
        txtQuestionText.setWrapStyleWord(true);
        jScrollQuestionPanel.setViewportView(txtQuestionText);

        txtAnswerText.setColumns(20);
        txtAnswerText.setRows(5);
        txtAnswerText.setWrapStyleWord(true);
        jScrollAnswerPanel.setViewportView(txtAnswerText);

        jbtnUpdate.setText("Update");
        jbtnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnUpdateActionPerformed(evt);
            }
        });

        jbtnCreate.setText("Create New");
        jbtnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCreateActionPerformed(evt);
            }
        });

        jbtnDelete.setText("Delete");
        jbtnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDeleteActionPerformed(evt);
            }
        });

        jcbCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblCategory.setText("Category: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbtnCreate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbtnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbtnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblQuestionID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollIDPane))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollQuestionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                            .addComponent(jScrollAnswerPanel)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblQuestionText)
                                    .addComponent(lblAnswer))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblCategory)
                                .addGap(18, 18, 18)
                                .addComponent(jcbCategory, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblQuestionID)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblQuestionText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollQuestionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(lblAnswer))
                    .addComponent(jScrollIDPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollAnswerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCategory)
                    .addComponent(jcbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnUpdate)
                    .addComponent(jbtnCreate)
                    .addComponent(jbtnDelete))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jlbQuestionIDValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jlbQuestionIDValueChanged
        
        // make sure something is selected, then load data
        if(!this.jlbQuestionID.isSelectionEmpty()){
            myQuestion = new Question(Integer.parseInt(this.jlbQuestionID.getSelectedValue()));
            loadQuestionData(myQuestion);
        }
    }//GEN-LAST:event_jlbQuestionIDValueChanged

    private void jbtnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnUpdateActionPerformed
        //verify deletion is wanted
        if(JOptionPane.showConfirmDialog(this, "Do you want to change this question?", "Set Changes",
                    JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
            //get info from textboxes
            myQuestion.setQuestionText(this.txtQuestionText.getText());
            myQuestion.setAnswerText(this.txtAnswerText.getText());
            //update database with edited text
            myQuestion.updateQuestionInfo();
            //show confirmation message
            JOptionPane.showMessageDialog(this, "Updates were successful!");
        }
    }//GEN-LAST:event_jbtnUpdateActionPerformed

    private void jbtnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCreateActionPerformed
        // TODO add your handling code here:
        //create new question
        myQuestion = new Question(1);
        //get info from user
        String strNewQuestion = JOptionPane.showInputDialog("Enter the new question: ");
        String strNewAnswer = JOptionPane.showInputDialog("Enter the correct answer: ");
        myQuestion.setQuestionText(strNewQuestion);
        myQuestion.setAnswerText(strNewAnswer);
        //add question to database
        myQuestion.insertNewQuestion();
        //refreshing list box
        this.jlbQuestionID.setModel(myList.getQuestionList());
        DefaultListModel model = (DefaultListModel)jlbQuestionID.getModel();
    }//GEN-LAST:event_jbtnCreateActionPerformed

    private void jbtnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDeleteActionPerformed
        // TODO add your handling code here:
        //verify deletion is wanted
        if(JOptionPane.showConfirmDialog(this, "Do you want to permanently delete this record?", "Delete record",
            JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
            //delete
            myQuestion.deleteQuestion();
            

            //get index so new index can be set later
            int i = this.jlbQuestionID.getSelectedIndex();
            //remove id from the list
            DefaultListModel model = (DefaultListModel)jlbQuestionID.getModel();
            model.remove(i);
            //set new selected item
            if(i > 0)
            {
                this.jlbQuestionID.setSelectedIndex(i - 1);
            }else{
                this.jlbQuestionID.setSelectedIndex(0);
            }
        }
    }//GEN-LAST:event_jbtnDeleteActionPerformed

    private void loadQuestionData(Question que){
        //fill text boxes with data
        //TODO: work on making question and answer text wrap around text boxes
        String qt = que.getQuestionText();
        JTextArea qWrap = new JTextArea();
        qWrap.setText(qt);
        qWrap.setLineWrap(true);
        this.txtQuestionText.setText(qt);
        //this.txtQuestionText.setWrapStyleWord(true);
        
        String ast = que.getAnswerText();
        JTextArea aWrap = new JTextArea();
        aWrap.setText(ast);
        aWrap.setLineWrap(true);
        this.txtAnswerText.setText(ast);
        //this.txtAnswerText.setWrapStyleWord(true);
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuestionEditorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuestionEditorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuestionEditorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuestionEditorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuestionEditorGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollAnswerPanel;
    private javax.swing.JScrollPane jScrollIDPane;
    private javax.swing.JScrollPane jScrollQuestionPanel;
    private javax.swing.JButton jbtnCreate;
    private javax.swing.JButton jbtnDelete;
    private javax.swing.JButton jbtnUpdate;
    private javax.swing.JComboBox<String> jcbCategory;
    private javax.swing.JList<String> jlbQuestionID;
    private javax.swing.JLabel lblAnswer;
    private javax.swing.JLabel lblCategory;
    private javax.swing.JLabel lblQuestionID;
    private javax.swing.JLabel lblQuestionText;
    private javax.swing.JTextArea txtAnswerText;
    private javax.swing.JTextArea txtQuestionText;
    // End of variables declaration//GEN-END:variables
}
